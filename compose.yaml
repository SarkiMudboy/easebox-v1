
x-secrets: &easebox-secrets
  SECRET_KEY: ${SECRET_KEY}
  DB_NAME: ${DB_NAME}
  DB_USER: ${DB_USER}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_HOST: ${DB_HOST}
  DB_PORT: ${DB_PORT}

  DEBUG: ${DEBUG}

  TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
  TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
  TWILIO_PHONE: ${TWILIO_PHONE}

  SMTP_PORT: ${SMTP_PORT}
  SMTP_SERVER: ${SMTP_SERVER}
  EMAIL_ADDRESS: ${EMAIL_ADDRESS}
  EMAIL_APP_PASSWORD: ${EMAIL_APP_PASSWORD}

services:
  server:
    build:
      context: .
    ports:
      - 8000:8000

    container_name: EB
    
    volumes:
      - ./easebox:/easbox

    command: > 
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver"
    
    environment: *easebox-secrets

    depends_on:
      - db
      - redis
      - celery

  db:
    image: postgres:13-alpine
    
    restart: always

    container_name: DB

    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    
    expose:
      - 5432
    
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:alpine3.17
    container_name: RD

  celery:
    build:
      context: .

    restart: always

    command: "python -m celery -A easebox worker -l info --pool=solo"

    container_name: CL

    volumes:
      - ./easebox:/easbox

    environment: *easebox-secrets

    depends_on:
      - db
      - redis

volumes:
  db-data:


